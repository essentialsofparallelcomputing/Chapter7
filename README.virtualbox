# These are instructions to setup a Ubuntu virtual machine for the examples in
# this chapter. The first part of the instructions must be done manually. The
# last half can be done by executing this file as a script as instructed.

# Download VirtualBox and install

# Download Ubuntu desktop install and save on local disk [ubuntu-18.04.2-desktop-amd64.iso]
# Download VBoxGuestAdditions.iso
# On Mac already at /Applications/VirtualBox.app/Contents/MacOS/VBoxGuestAdditions.iso

# Setup new machine
# See the README.autovirtualbox script for directions for setting up base virtual machine

# sign in

# click through whats new

# select dots at bottom left and start up a terminal

# Reboot to get cut and paste and screen size fixed

# Add user to sudo list if needed
# su
# visudo
# add %vboxsf ALL=(ALL) ALL
# exit

# sudo apt-get install -y git

# Need script on guest to execute
# git clone --recursive https://github.com/essentialsofparallelcomputing/Chapter7.git

sudo apt-get update && \
sudo apt-get install -y cmake git vim gcc g++ gfortran software-properties-common wget gnupg-agent && \
sudo apt-get clean && \
sudo rm -rf /var/lib/apt/lists/*

# Installing latest GCC compiler (version 9) for best OpenMP
sudo add-apt-repository -y ppa:ubuntu-toolchain-r/test
sudo apt-get update && \
sudo apt-get install -y gcc-9 g++-9 gfortran-9 && \
sudo apt-get clean && \
sudo rm -rf /var/lib/apt/lists/*

sudo update-alternatives --install /usr/bin/gcc       gcc       /usr/bin/gcc-9 90 \
                         --slave   /usr/bin/g++       g++       /usr/bin/g++-9 \
                         --slave   /usr/bin/gfortran  gfortran  /usr/bin/gfortran-9 \
                         --slave   /usr/bin/gcov      gcov      /usr/bin/gcov-9

# Installing Intel compiler since it gives the best threading performance across compiler vendors
pushd /tmp
wget -q https://apt.repos.intel.com/intel-gpg-keys/GPG-PUB-KEY-INTEL-SW-PRODUCTS-2023.PUB
sudo apt-key add GPG-PUB-KEY-INTEL-SW-PRODUCTS-2023.PUB
sudo rm -f GPG-PUB-KEY-INTEL-SW-PRODUCTS-2023.PUB
popd

echo "deb https://apt.repos.intel.com/oneapi all main" | sudo tee /etc/apt/sources.list.d/oneAPI.list
echo "deb [trusted=yes arch=amd64] https://repositories.intel.com/graphics/ubuntu bionic main" | sudo tee /etc/apt/sources.list.d/intel-graphics.list
sudo apt-get update && \
sudo apt-get install -y \
             intel-hpckit-getting-started \
             intel-oneapi-common-vars \
             intel-oneapi-common-licensing \
             intel-oneapi-dev-utilities \
             intel-oneapi-icc \
             intel-oneapi-ifort \
             intel-oneapi-openmp \
             intel-oneapi-inspector && \
sudo apt-get clean && \
sudo rm -rf /var/lib/apt/lists/*

# If Software updater prompts, install updated software --> wait ....

source /opt/intel/inteloneapi/setvars.sh
echo "source /opt/intel/inteloneapi/setvars.sh" >> ${HOME}/.bash_profile

cd Chapter7; #make
